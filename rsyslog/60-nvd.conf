#load required modules here so we can validate via ansible
#for parsing CEE-enhanced syslog messages
module(load="mmjsonparse")

# provides elasticsearch support
module(load="omelasticsearch")


template(name="nvdToES" type="list"){
    property(name="$!all-json") #forward whole json without intervening
}

template(name="nvdIndex-template" type="string" string="nvd-%$year%%$month%%$day%")
template(name="bulkid-template" type="string" string="%$!vulnId%")


if $msg contains 'nvd.nist.gov' then {

action(type="omfile" File="/var/log/debug_nvd")

    action(type="mmjsonparse" cookie="")

    if $parsesuccess == "OK" then {

        action(type="omelasticsearch"
            server="localhost"
#            usehttps="on"
            serverport="9200"
            template="nvdToES"
            dynSearchIndex="on"
            searchIndex="nvdIndex-template"
            searchType="_doc"
            bulkmode="on"
            dynbulkid="on"
            bulkid="bulkid-template"
            maxbytes="100m"
            action.resumeRetryCount="-1" #eternal
            action.resumeInterval="300" #5min
            action.resumeIntervalMax="43200" #12h
            queue.type="linkedlist"
            queue.workerThreads="4"
            queue.size="250000"
            queue.dequeuebatchsize="10"
#            queue.workerThreadMinimumMessages="60000"
            queue.minDequeueBatchSize="1" #the minimum number of messages to send if not fill$
            queue.minDequeueBatchSize.timeout="6000" #miliseconds to wait for new messages before send
            queue.saveonshutdown="on"
            uid="admin"
            pwd="admin"
            errorfile="/var/log/rsyslog_nvd_elasticsearch_fail"
            ) stop
    } else {
        action(type="omfile" File="/var/log/rsyslog_nvd_parse_fail") stop
    }
}
